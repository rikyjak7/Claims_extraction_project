import requests
import json

def generate_content_with_gemini(api_key, text_prompt):
    """
    Sends a text prompt to the Gemini 1.5 Flash API and returns the generated content.

    Args:
        api_key: Your Google API key.
        text_prompt: The text prompt you want to send to the model.

    Returns:
        The generated content as a string, or None if there was an error.
    """
    url = f"https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash:generateContent?key=AIzaSyDWSbtHRfchI6cwtum9MEuZr-8WFpdnQ88"
    headers = {'Content-Type': 'application/json'}
    data = {
        "contents": [{
            "parts": [{"text": text_prompt}]
        }]
    }

    try:
        response = requests.post(url, headers=headers, json=data)
        response.raise_for_status()  # Raise an exception for bad status codes (4xx or 5xx)
        response_json = response.json()

        # Extract the generated text
        if "candidates" in response_json and response_json["candidates"]:
            generated_text = response_json["candidates"][0]["content"]["parts"][0]["text"]
            return generated_text
        else:
           print("Error: No generated text found in the response.")
           return None

    except requests.exceptions.RequestException as e:
        print(f"Error during API request: {e}")
        return None
    except json.JSONDecodeError as e:
        print(f"Error decoding JSON response: {e}")
        return None


if __name__ == "__main__":
    # Replace with your actual API key
    api_key = "YOUR_API_KEY" 
    prompt = "Explain how AI works"
    
    generated_text = generate_content_with_gemini(api_key, prompt)

    if generated_text:
        print("Generated text:")
        print(generated_text)